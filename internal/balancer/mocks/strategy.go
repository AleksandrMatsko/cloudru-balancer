// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/AleksandrMatsko/cloudru-balancer/internal/balancer (interfaces: Strategy)
//
// Generated by this command:
//
//	mockgen -destination=internal/balancer/mocks/strategy.go -package=mock_balancer github.com/AleksandrMatsko/cloudru-balancer/internal/balancer Strategy
//

// Package mock_balancer is a generated GoMock package.
package mock_balancer

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockStrategy is a mock of Strategy interface.
type MockStrategy struct {
	ctrl     *gomock.Controller
	recorder *MockStrategyMockRecorder
	isgomock struct{}
}

// MockStrategyMockRecorder is the mock recorder for MockStrategy.
type MockStrategyMockRecorder struct {
	mock *MockStrategy
}

// NewMockStrategy creates a new mock instance.
func NewMockStrategy(ctrl *gomock.Controller) *MockStrategy {
	mock := &MockStrategy{ctrl: ctrl}
	mock.recorder = &MockStrategyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStrategy) EXPECT() *MockStrategyMockRecorder {
	return m.recorder
}

// ChooseBackend mocks base method.
func (m *MockStrategy) ChooseBackend() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ChooseBackend")
	ret0, _ := ret[0].(string)
	return ret0
}

// ChooseBackend indicates an expected call of ChooseBackend.
func (mr *MockStrategyMockRecorder) ChooseBackend() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ChooseBackend", reflect.TypeOf((*MockStrategy)(nil).ChooseBackend))
}
